# Copyright (C) 2012, 2014, 2018  Olga Yakovleva <yakovleva.o.v@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 2.1 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

define Apostrophe %'|â€™;

define SmallLetter a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z;
define CapitalLetter A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z;
define Letter SmallLetter | CapitalLetter;

define NZDigit 1|2|3|4|5|6|7|8|9;
define Digit %0|NZDigit;
define PlusOrMinus %+|%-;

define Number %0 | [NZDigit Digit*];

define CaseVariants 
a -> a|A , 
b -> b|B , 
c -> c|C , 
d -> d|D , 
e -> e|E , 
f -> f|F , 
g -> g|G , 
h -> h|H , 
i -> i|I , 
j -> j|J , 
k -> k|K , 
l -> l|L , 
m -> m|M , 
n -> n|N , 
o -> o|O , 
p -> p|P , 
q -> q|Q , 
r -> r|R , 
s -> s|S , 
t -> t|T , 
u -> u|U , 
v -> v|V , 
w -> w|W , 
x -> x|X , 
y -> y|Y , 
z -> z|Z ; 

define ConsonantLetterSequence 
[b|c|d|f|g|h|j|k|l|m|n|q|p|r|s|t|v|w|x|z]+ ; 

define ConsonantAbbreviation {ms} | {mrs} | {mr} | {vs} ; 

read text initialisms.txt
letter machine
define LetterSequenceWithVowels

define LetterSequence 
[[{IT} | {US} | [ConsonantLetterSequence - ConsonantAbbreviation] | LetterSequenceWithVowels] .o. CaseVariants].l ; 

define Am Apostrophe [m|M];
define Are Apostrophe [r|R] [e|E];
define Have Apostrophe [v|V] [e|E];
define Has Apostrophe [s|S];
define Had Apostrophe [d|D];
define Will Apostrophe [l|L] [l|L];
define Is Has;
define Not [n|N] Apostrophe [t|T];
define Them Apostrophe [e|E] [m|M];

define Contraction 
Has|Had|Have|Will| 
Them | 
[[I|i] [Am|Will|Have|Had]] | 
[[w|W] [e|E] [Are|Will|Have|Had]] | 
[[y|Y] [o|O] [u|U] [Are|Will|Have|Had]] | 
[[t|T] [h|H] [e|E] [y|Y] [Are|Will|Have|Had]] | 
[(s|S) [h|H] [e|E] [Will|Has|Had]] | 
[[i|I] [t|T] [Has|Had|Will]] | 
[[[[a|A] [r|R] [e|E]] | 
[[c|C] [a|A]] | 
[[c|C|w|W|[[s|S] [h|H]]] [o|O] [u|U] [l|L] [d|D]] | 
[[d|D] [a|A] [r|R] [e|E]] | 
[[d|D] [i|I] [d|D]] | 
[[d|D] [o|O] ([e|E] [s|S])] | 
[[h|H] [a|A] [s|S|d|D|[[v|V] [e|E]]]] | 
[[i|I] [s|S]] | 
[[w|W] [a|A] [s|S]] | 
[[w|W] [e|E] [r|R] [e|E]] | 
[[w|W] [o|O]] |
[[a|A] [i|I]] |
[[m|M] [a|A] [y|Y]] |
[[m|M] [i|I] [g|G] [h|H] [t|T]] |
[[m|M] [u|U] [s|S] [t|T]] |
[[n|N] [e|E] [e|E] [d|D]] |
[[o|O] [u|U] [g|G] [h|H] [t|T]] |
[[s|S] [h|H] [a|A]]] Not] | 
[[o|O] Apostrophe [c|C] [l|L] [o|O] [c|C] [k|K]] ; 

define Word Letter+ | Contraction ;

define FormattedPositiveInteger NZDigit Digit^<3 [%, Digit^3]^{1,4} ; 

define BasicTokenizer 
Word @-> ... word || _ \Letter | .#. ,, 
FormattedPositiveInteger @-> ... num || _ .#. | \Digit ,, 
NZDigit Digit* @-> ... num ,, 
%0 Digit+ @-> ... dig ,, 
%0 @-> ... num ,, 
\[Letter | Digit] @-> ... sym ; 

define CamelCaseTokenizer 
[..] -> word || SmallLetter _ CapitalLetter , CapitalLetter _ CapitalLetter SmallLetter ; 

define CamelCaseFix 
word -> 0 || CapitalLetter _ CapitalLetter s word ; 

define TagLetterSequences 
word -> lseq || [.#.|word|num|dig|sym] LetterSequence _ ; 

define UntagLargeNumbers 
num -> dig || Digit^16 _ ; 

define TagDecimalSeparators 
%. sym:dsep Digit+ [[num:dig]|dig] -> || num|dig _ ; 

define TagOrdinalNumbers 
[[1 num:0 {st}] | [2 num:0 {nd}] | [3 num:0 {rd}]] lseq:num -> || .#. | \1 _ ,, 
[%0|4|5|6|7|8|9|[1 [1|2|3]]] num:0 {th} lseq:num -> ; 

define TagPercentSigns 
sym -> sign || [dig|num] %% _ ; 

define TagPlusOrMinusSigns 
sym -> sign || [sym|.#.] PlusOrMinus _ Digit ; 

define Tokenizer 
BasicTokenizer .o. 
CamelCaseTokenizer .o.
CamelCaseFix .o. 
TagLetterSequences .o. 
UntagLargeNumbers .o. 
TagDecimalSeparators .o. 
TagOrdinalNumbers .o. 
TagPlusOrMinusSigns .o. 
TagPercentSigns ; 

regex Tokenizer ; 
